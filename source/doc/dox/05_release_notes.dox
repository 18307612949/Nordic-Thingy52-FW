/**
@page release_notes Release Notes

<h2>Nordic Thingy:52 firmware version 2.0.0</h2>

<b>Built on nRF5 SDK v13.0.0</b>

<b>Uses SoftDevice S132 v4.0.2</b>

Tested with the following versions of GCC and Keil:
- gcc_arm_none_eabi 4.9 2015q3
- Keil version 5.20

<h3>New features</h3>
- NFC functionality has been added. The NFC tag contains records of the mobile app on Android for automatic app launch, a link to Thingy:52 webpages and a string containing the MAC address, as well as a random generated address. The latter 4-byte ID is randomly generated on each boot and displayed in the BLE advertise response packet as well.


<h3>Changes</h3>
- The upper BLE notification limit has been increased to 60 seconds for temperature, pressure, humidity, and color to improve compatibility with IoT needs.
- The lower delay limit for LED breathe has been increased from 1 ms to 50 ms.
- The minimum motion processing frequency set to 5 Hz.
- Upon BLE connection, the lightwell used to change to a cyan color. This has been changed to green.
- The entire project has been converted to NRF_LOG for Real Time Terminal (RTT) output.
- When requesting a new LED breathe command, all counters of the IO extender will be restarted. This ensures better LED response, but will reset the light cycle of any connected LED.


<h3>Bugfixes</h3>
- The compass has been integrated in the motion processing and Thingy will indicate magnetic North. Rotate Thingy around the Z axis back an forth to get compass lock.

<h3>Known issues</h3>
- Due to the strong magnetic interference by the speaker, compass accuracy is limited.
- Thingy gas sensor requires 48 hours of operation time (burn in) to self-calibrate.
- If you compile a debug version of the firmware, error logs in the RTT console when a function returns an error code, even when the error is correctly handled by the firmware.
- Speaker status notifications may arrive out of order under load.
- Writing the device name characteristic may sometimes fail to update the device name field in advertising packets.
- Performing extensive enabling/disabling of sensors might reboot Thingy.
- Configuring very optimistic service intervals may cause Thingy to reboot. Examples:
	- Sound streaming and motion sensor simultaneously.
	- Motion sensor and several environment sensors configured for lowest notification interval.
- Sound service streaming will not work on older devices due to low bandwidth.
- The first 10 seconds of motion sensor data may be inaccurate due to calibration.
- Preproduction versions of the Thingy hardware will not be able to perform OTA-DFU of the bootloader.
- Quaternion will always start at identity when turning the service on (Enabling quaternion notifications will always start at Identity (0,0,0,1), equivalent of Eulers (0,0,0)).

@note The micro-ecc library is used in the Thingy bootloader. See <a href="./license.txt" target="_blank">license.txt</a> for the license of this library.

*/
